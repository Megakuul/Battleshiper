AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  bootstrap
  
  Sample SAM Template for bootstrap

Parameters:
  Domain:
    Type: String
    Default: "https://battleshiper.megakuul.ch"
    Description: "Domain where the Battleshiper API is accessed by the end users."

Globals:
  Function:
    Timeout: 5

Resources:
  BattleshiperUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: "battleshiper-auth-pool"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      MfaConfiguration: OPTIONAL
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
  
  BattleshiperUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref BattleshiperUserPool
      ClientName: "battleshiper-auth-client"
      GenerateSecret: true
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - "code"
      AllowedOAuthScopes:
        - "openid"
        - "profile"
        - "email"
      CallbackURLs:
        - !Sub "${Domain}/auth/callback"
      LogoutURLs:
        - !Sub "${Domain}/auth/logout"

  BattleshiperApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: 
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt BattleshiperUserPool.Arn

  BattleshiperAuthFunc:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: api/auth
      Handler: auth
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Events:
        Authorize:
          Type: Api
          Properties:
            Path: /auth/authorize
            Method: GET
            RestApiId: !Ref BattleshiperApi
        Callback:
          Type: Api
          Properties:
            Path: /auth/callback
            Method: GET
            RestApiId: !Ref BattleshiperApi
        Logout:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: GET
            RestApiId: !Ref BattleshiperApi

      Environment:
        Variables:
          CLIENT_ID: !Ref BattleshiperUserPoolClient
          CLIENT_SECRET: !GetAtt BattleshiperUserPoolClient.ClientSecret
          REDIRECT_URI: !Sub "${Domain}/callback"
          USER_POOL_ID: !Ref BattleshiperUserPool
          AWS_REGION: !Ref AWS::Region
          COGNITO_DOMAIN: 'your-domain.auth.region.amazoncognito.com'
          
          MOCK_USER_AUTH: true

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BattleshiperAuthFuncAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  BattleshiperAuthFunc:
    Description: "First Lambda Function ARN"
    Value: !GetAtt BattleshiperAuthFunc.Arn
  BattleshiperAuthFuncIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt BattleshiperAuthFunc.Arn
